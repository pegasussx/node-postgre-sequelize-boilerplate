const dotenv = require('dotenv');
const debug = require('debug')('node-server:www');
const http = require('http');
const app = require('../server');
const db = require('../app/db/models');

dotenv.config();

const PORT = process.env.PORT || 8000;

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

async function startServer() {
  /** Connecting to database */
  await db.sequelize.sync();
  debug(
    `Postgre Connected to database: ${process.env.POSTGRES_DB} / ${process.env.POSTGRES_HOST}:${process.env.POSTGRES_PORT}`
  );

  /** Running server */
  server.listen(PORT, () => {
    debug(`Server is running on port ${PORT}`);
  });
  server.on('error', onError);
  server.on('listening', onListening);
}

// Start Server
startServer();

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof PORT === 'string' ? `Pipe ${PORT}` : `Port ${PORT}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      debug(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      debug(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
  debug(`Listening on ${bind}`);
}
